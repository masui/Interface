GoldFish: JavaScriptとAndroid NFCによる実世界GUIフレームワーク 橋本 翔† 増井俊之††

本論文では Android 携帯電話と NFC リーダーを用いて実世界 GUI を実装する
ための JavaScript フレームワークを提案する。NFC リーダーと加速度センサー
を使うと、ユーザーはディスプレイと マウスでのメニューやスクロールバーの
ような様々な操作を NFC タグで行える。全てのプログラム は Web 上に配置さ
れた JavaScript で実装され、ユーザーは Android 携帯電話にたくさんのプロ
グ ラムをインストールする必要なく、それらを利用できる。

GoldFish: Real-world GUI Framework using JavaScript and Android NFC
1.
実世界 GUI

本研究の目的は、実世界GUI4)を日常的に使えるようにする事である。実世
界GUIは、コンピュータのグラフィカルユーザインタフェース(GUI)に似た
しくみを実世界で使うという概念である。塚田らのUbi-Finger2)は、対象を
指さす事で選択し、ジェスチャーで操作するための手袋型装置を開発した。
また暦本は複数のコンピュータ間でマウスのドラッグアンドドロップの様にデー
タをやりとりする手法3)を提案した。椎尾らは、マウスとバーコードリーダー
を一体化させることであらゆる物に対してマウスで操作できるようにした。
1)GUIには、コンピュータの画面上にゴミ箱や窓などの現実世界のメタファー
を提示してユーザーに理解しやすくしている部分と、データを扱うためのドロッ
プダウンメニューやスクロールバーなどのディスプレイならではの新しいユー
ザインタフェースとが組み合わさってできている。我々の生活にはたくさんの
コンピュータが埋め込まれているが、電子錠つきの自動ドアをキーパッドで操
作して開けていたり、ラップトップPCから目の前にあるプリンターに印刷さ
せるのに画面上でプリンタの名前を指定して送信していたりと、操作と効果
の対応づけがわかりにくく効率が悪い事がある。そうではなくむしろ、実世界
でもGUIのようにメタファーによるインタフェースとデータ操作用インタ
フェースが混在している方が使い勝手が良いのではないかと考えた。

既存の実世界GUIの研究から、1.対象物体の指定2.ジェスチャーやGUIに
よる操作3.ユーザーとコンテキストの判別4.他のシステムとの通信の4
つの要素が重要であると考えられる。これらを利用するアプリケーションを
簡単に実装でき、また日常的に使えるような仕組みを作ることが本研究の目的
である。

2. GoldFish

GoldFishは実世界GUIを実装するためのフレームワークである。Android NFCを
使い、実世界の様々な場所に貼ったNFCタグ(RFIDタグ)を読む事で それぞれ個
別のアプリケーションを起動させる事ができる。GoldFish上でのアプリケーショ
ンは通常のAndroidアプリケーションの様にJavaとXMLで 実装して個々の端末に
インストールするのではなく、JavaScriptとHTMLで実装してWeb上に公開し、
GoldFishのWebサイトにそのURLとNFCタグの 組み合わせを登録する事で各
Android端末から呼び出される。一般にプログラミングというものは初心者には
敷居が高く、ましてや実世界を操作する電子回路や機器と連動したプログラム
を書く事などは初心者には難しいが、プログラミング初心者にGoldFishを使わ
せたところ半日で研究室の電子錠ドアをジェスチャー入力で開閉するシステム
が実装できた。GoldFishは ubif.org5)で公開されており、ソースコードは
githubで公開されている。7)

2.1	GoldFish アプリケーションの例

GoldFishアプリケーションの例として、実世界コピペを実装した。コンピュー
タ同士の間でAndroidを用いてコピーアンドペーストができるアプリケーショ
ンである。あらかじめコンピュータにNFCタグを貼り付けておき、そこに
Android端末で触れると金魚掬いの画面が表示される。(図:1)この画面で
Android端末を右に掬うと、現在最前面に表示しているwebページが
Androidにコピーされる。別のコンピュータに触れてから左に流し込むとペー
ストが行われる。

実世界コピペの実装では、GoldFishアプリケーションは各コンピュータと直
接通信していない。GoldFishアプリケーションおよび各コンピュータはインター
ネット上のクリップボードサーバーと通信する。各コンピュータにはクリップ
ボードクライアントがインストールされていて、それぞれ貼り付けられた
NFCタグのIDが実行時引数に与えられている。クリップボードサーバーは
サーバーアプリケーションにRubyのSinatraとEventMachineを、データス
トアにMem-Cachedを使用して実装した。クリップボードクライアントは
webブラウザ用をGoogleChromeExtensionで、Mac用アプリケーションを
JRubyでそれぞれ実装した。

Android上で動作するGoldFishアプリケーションは、JavaScriptの
setIntervalとgoldfish.accelerometer関数を用いて10ミリ秒毎に加速度
センサーを監視する。1G以上の加速度が100ミリ秒以上連続で左右どちら
にかかったかによって、ユーザーがAndroid端末をコピーとペーストどちら
にジェスチャ入力したかを判別する。ジェスチャ入力値と端末IDとNFCタ
グのIDはAjaxでクリップボードサーバーに送信される。goldfish.id関
数、goldfish.tag関数がそれぞれ端末IDとNFCタグのID取得に使える。
各コンピュータにインストールされたクリップボードクライアントは、
cometを用いてクリップボードサーバーから通信があるまで待機する。URLが
送られてきた時はwebページを開き、またコピー命令が送られてきた時は現在
開いているURLを返信する。実世界コピペを使うと、これまでコンピュータ間
での通信では機器同士が隣にあるにも関わらずデータ送信先の名前を入力し
たりアイコンをクリックしたりしていた操作を、直接指示でデータ送信できる
ようになる。他にもプリンターにデータを送信するのではなく、データを手
で掴んで投げ込むと印刷されるといった理解しやすいユーザインタフェースが
実装できる。

2.2	GoldFish フレームワークの実装

GoldFishでは、アプリケーションの実装にAndroidネイティブのJavaでは
なくJavaScriptを採用している。Javaはプログラム言語自体が複雑で難し
く、またセンサーの値を監視しつつ画面を更新しつつ通信も行うなどの並行
処理の記述がシンプルに記述できない。JavaScriptはシンプルなプログラム
言語で、初心者にもよく薦められている。そして関数がファーストクラスオ
ブジェクトなのでタイマーとコールバックを用いた並行処理の記述も容易であ
る。

GoldFishはJavaで実装したネイティブアプリに、WebViewコンポーネント
でwebページを表示している。WebView内のJavaScriptとAndroidネイティ
ブのJavaが通信する事で、JavaScriptからセンサーなどの機能を呼び出せ
る。
GoldFishはNFCタグを読んだ際に、あらかじめタグに対して登録されている
URLを読み込み、We-bViewに表示する。NFCタグはGoldFishのwebサイ
トで登録できる。(図:2)

2.3	JavaScript によるアプリケーションの実装

アプリケーションの実装は、GoldFish のサンプル ページ6) を見るとわかりや
すい。Web ページを作成 し、goldfish.js という JavaScript ライブラリを読
み込 むと Android ネイティブのセンサーや GoldFish 用の 様々な機能が使用
できる。1 章で挙げた実世界 GUI の 実装に必要な 4 つの機能は、
goldfish.tag 関数で操作対象の指定、goldfish.gyroscope や accelerometer
な どのセンサーによるジェスチャー入力、goldfish.id 関 数によるユーザー
の判別、goldfish.tcp や a jax による ほかのシステムとの通信の組み合わせ
によって実現で きる。

図 3	GoldFish ドアのしくみ

3.	その他の GoldFish アプリケーションの例

前章の実世界コピペの他にも、いくつか GoldFish を用いた実世界 GUI を紹介
する。いずれも実装には 1 日かかっておらず、GoldFish を使うことで実世界
GUI を簡単に素早くプロトタイピングできる事がわ かった。

3.1 ドア認証

大学の研究室の電子錠ドアを GoldFish で開閉する システムを実装した。
(図:3)Android アプリケーショ ン側の実装は、プログラムの基礎は学んだもの
のあま り書いたことのない大学 3 年生でも 6 時間ほどで実装 できた。研究
室の電子錠ドアに貼ってある NFC タグに An- droid 端末で触り、ドアノブを
ひねるような動きで An- droid 端末を回転させるとドアの鍵が開くアプリケー
ションである。JavaScript40 行程度で書かれた Gold- Fish アプリケーション
は、10 ミリ秒毎にジャイロス コープを監視して角度が合計 90 度まわされる
と Ajax でドアサーバーに開閉のリクエストを送る。ドアサー バーは
Phidgets サーボモーターと Ruby の Sinatra アプリケーションで実装されて
おり、HTTP-POSTを受信するとドアの鍵を回して開け、5 秒後に閉める。 筆者
らは日常的にこの仕組みを使っている。

3.2 マ ウ ス

GoldFish の UDP/IP 関数を用いて、空中で操作す るマウスとトラックパッド
を実装した。机に NFC タ グを貼り付けておき、その上に Android 端末を乗せ
る と目の前の Mac を操作できるトラックパッドが現れ る。Mac では JRuby
で実装したマウスサーバーが起 動しており、UDP で受信した座標にマウスを移
動さ せたり、クリックさせたりという指示を実行できる。

3.3 写真立て

Android 端末を机の上の写真立てに乗せると、Flickr から取得した動物の写真
がスライドショーとして表示さ れるアプリケーションを実装した。実装には
Flickr の JavaScript API を GoldFish の Ajax から使用した。

4.結 論

GoldFish を使うことで実世界 GUI アプリケーショ ンを簡単に実装できる。
GoldFish アプリケーション は JavaScript で記述する事ができ、また操作対
象の 指定、ジェスチャーや GUI による操作、ユーザーとコ ンテキストの判別、
他のシステムとの通信を簡潔に記 述できる機能が JavaScript の関数として実
装されて いる。アプリケーションの配布も web 上にアップロー ドし URL を
タグと関連付けるだけで完了するため、 各端末にインストールしなおす必要が
ない。GoldFish によって実世界 GUI アプリケーションの開発の敷居 が下がっ
たので、プログラミング初心者でも短時間で アプリケーションを実装する事が
できた。

参考文献

1) 椎尾一郎, 増井俊之, 福地健太郎. FieldMouse による実世界指向インタフェース. コンピュータ ソフトウェア, Vol.18, No.1, pp. 28-38, January 2001.
GoldFish: JavaScript と Android NFC による実世界 GUI フレームワーク

2) 塚田浩二,安村通晃: Ubi-Finger:モバイル指向 ジェスチャ入力デバイスの研究, 情報処理学会論 文誌, Vol.43, No.12, pp.3675-3684 (2002)
3) Jun Rekimoto, Pick-and-Drop: A Direct Ma- nipulation Technique for Multiple Computer Environments, Proceedings of UIST’97, pp. 31- 39, 1997.
4) Toshiyuki Masui, Itiro Siio. Real-World Graphical User Interfaces. In Proceedings of the International Symposium on Handheld and Ubiquitous Computing (HUC2000), pp.72-84, September 2000.
5) GoldFish. http://ubif.org 6) GoldFishAppSample.http://ubif.org/goldfish/sample 7) ソースコード.https://github.com/shokai/goldfish


