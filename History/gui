<h2>GUI</h2>

現在の計算機はパソコンもスマートフォンも
グラフィックユーザインタフェース(GUI)で操作を行なうのが普通になっています。
現在主流のGUIは
WIMP(Window, Icon, Menu, Pointing device)にもとづくインタフェースが基本となっており、
これはパソコンでもタブレットでもスマートフォンでもほとんど同じ操作性になっています。

WIMPによるGUIはシリコンバレーのXerox PARC(Palo Alto Research Center)で開発されたもので、
1973には「Alto」という計算機が開発されました。
[[http://ja.wikipedia.org/wiki/Alto Alto]]

 GUIの歴史
  今のGUIの原型はPARCあたり
  実はSketchPadというシステムの頃からある
   WIMPではないが直接操作が実現されていた


Altoは商用に販売されたものではありませんが、
その後Xeroxは
1981年に
[[http://ja.wikipedia.org/wiki/Xerox_Star Xerox Star]]
を販売し、日本語対応した
[[http://sites.google.com/site/jstar8080/ JStar]]も
1982に販売を開始しました。

Sunワークステーション
IRIX

Steve JobsがPARCを見学したときAltoに衝撃を受けて

一般向けの計算機に搭載されたのは
1983年のLisaが最初で、
[[http://ja.wikipedia.org/wiki/Lisa_%28%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%29 Lisa]] 1983
廉価版の
[[http://ja.wikipedia.org/wiki/Macintosh Macintosh]]が
1984年に販売開始されました。

1983 Sun2

X Window 1984

Andrew 1982

Unixワークステーション上のGUIがブームになった

NeXT
1985年に創業。最初の製品NeXTcubeを1988年に発売し、小型化したNeXTstationは1990年に発売。


Macintoshが最初

[[http://ja.wikipedia.org/wiki/PC-9800%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA PC9801]] 1982
[[http://ja.wikipedia.org/wiki/Lisa_%28%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%29 Lisa]] 1983
[[http://ja.wikipedia.org/wiki/Macintosh Macintosh]] 1984
[[http://ja.wikipedia.org/wiki/Sun-3 Sun3]] 1985


X 以前にも、ビットマップディスプレイを使ったシステムは存在していた。ゼ
ロックスは、Alto（1973年）とStar（1981年）を開発している。アップルは、
Lisa（1983年）と Macintosh（1984年）を開発した。UNIX関連では、Andrew
Project（1982年）とロブ・パイクのBlit端末（1984年）がある。

------------------------------

<h2>GUIの衝撃</h2>

GUIは多くの計算機資源を具体的に目に見えるものにしたことが重要です。

CLIではあらゆる計算機資源に名前をつける必要があり、
どんな操作を行なうときもその名前を利用する必要がありましたが、
GUIでは必ずしもファイルに名前をつけなくくても操作を行なうことができます。

GUIは「直接操作」を可能にします。
直接操作とは、実世界で書類を扱うのと同じような方法で計算機データを扱う方法で、
書類をつまんだ手を動かすと書類が動くのと同じような感覚で、
ファイル上でマウスボタンをクリックして動かすとファイルが動きます。
このような動きは連続的かつ可逆的であり、
逆の操作を行なうともとの状態に戻すことができます。

コマンドラインインタフェースではこのようなことができません。
データを移動するためには移動パラメタが必要ですし、
もとに戻すためには逆のパラメタをを指定する必要があります。

また、GUIでは具体的な対象に対して具体的な操作を行なうことができます。
操作対象も操作の量も目で見えます。
CLIでは、操作対象は名前で指定しなければなりませんし、
操作の量は数字やシンボルで指定しなければなりません。

GUIの操作はハンドルを回して車を運転するようなものですが、
CLIでは % wheel right 30 のようなコマンドを打つのと同じようなもので、
操作性が圧倒的に違うことは明らかです。

大抵の人にとって、シンボルや数値を利用して何かを操作するより、
具体的な直接操作の方がわかりやすいものです。

文字の読み書きができない子供でもGUIならば使うことができる場合があります。

このような利点に加え、GUIでは各種の「GUI部品」が発明され利用されてきました。
メニューやスライダーがその代表的なものです。

アイコンや
メニューは複数の選択枝の中から必要なものを選択するための部品です。
メニューとGUIは直接関係があるわけではなく、
GUIが登場するより前からメニューは利用されていましたが、
テキストの列の中から必要なものを番号などで選ぶよりも、
項目の列の中から自分に必要なものをクリックする操作の方が簡単ですし、
階層的なメニューを構成することによって大量の項目から選択を行なうこともできるため、
現在のGUIでは非常に広く利用されています。
またスライダーは、小さな画面でも大きな情報を見られるようにするための工夫で、
長いテキストやWebページなどを閲覧するのに無くてはならない存在になっています。

メニューやスライダのようなGUI部品に似たものが現実世界に存在するわけではなく、
これらは純粋に計算機操作のために発明された工夫だということができます。
ゼロからの発明ですから、最初から良いものが存在したわけではありません。
生物が時間をかけて進化してきたのと同じように、
メニューやスライダも時間をかけて進化の結果現在のような形に収束していることになります。

メニューやスクロールバーのおかげで、多くの情報を画面から隠すことができるようになりました。
メニューを使うと選択項目を隠してしまうことができるので
インタフェースがすっきりします。
家電製品のリモコンにボタンが多いのはメニューが使えないからです。

<h3>GUIとオブジェクト指向</h3>

現在は様々な言語によるオブジェクト指向プログラミングが広く利用されていますが、
オブジェクト指向プログラミングは20年前はまだまだ常識的な技術にはなっていませんでした。
しかしGUIのプログラム開発はオブジェクト指向プログラミングと相性が良いため、
GUIの流行とオブジェクト指向プログラミングによる開発の流行は
相乗効果があったように思われます。

198x年にはNeXT社によりInterface Builderが開発され、
オブジェクト指向プログラミングとグラフィカル設計を組み合わせた開発手法が
(Cocoa, VisualC++など)
一般的になり現在まで続いています。

<h3>GUI部品とその進化</h3>

 メニュー
  最もよく使われるし研究されてる
    メニューはSmalltalkから
      http://d.hatena.ne.jp/sumim/20060510/p1
    階層メニューはUCSD Pascalから持ってきた
     キーボードベースかもしれない 1978
  パイメニューとかもある


 スライダ
  スライダは進化している
  [[http://d.hatena.ne.jp/sumim/20060823/p1 Macのスクロールバーはいかにしてできあがったか]]
   [[http://www.computerhistory.org/events/lectures/appleint_10281997/appleint_xscript.shtml Origins of Apple Human Interface]]


 Interface Builder
[[http://ja.wikipedia.org/wiki/Alto Alto]] 1973 
 [[http://squab.no-ip.com/collab/uploads/61/altoscroll01.png]]
[[http://ja.wikipedia.org/wiki/Xerox_Star Xerox Star]] 1981
[[http://sites.google.com/site/jstar8080/ JStar]] 1982
[[http://ja.wikipedia.org/wiki/PC-9800%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA PC9801]] 1982
[[http://ja.wikipedia.org/wiki/Lisa_%28%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%29 Lisa]] 1983
[[http://ja.wikipedia.org/wiki/Macintosh Macintosh]] 1984
[[http://ja.wikipedia.org/wiki/Sun-3 Sun3]] 1985
Windows2.0 1987
Windows3.1 1993
[[http://geekyschmidt.com/wp-content/uploads/2008/03/nextstep-screenshot.png NeXTStepの左スクロールバー]]

<h3>GUIの欠点</h3>

作るのが大変

  文字列関係の処理はやりにくくなった
   *ab*.txt みたいな指定ができない
  数字的処理も簡単ではない
   3行消す、などと言えない
   正確な操作ができない場合もある
 (慣れと直感)
  メニューみたいなもの、スライダみたいなものは存在しないのに直感になってる
  マウスはつかいにくいのに直感的になってる

1 [[[GUIを越えるGUI]]]
 "postgui" ズーミングとかの話

2 [[[GUI以降の世界]]]
 "nextif"

 音声とかジェスチャーとか
 どこにでもあるユビキタス/モバイル時代になる
 インビジブル / Calmになるのは間違いなし
 誰でも直感的に使えるようにする

3 [[[実世界インタフェース]]]

 具体的に見えるが本当に具体的なわけではない
 ファイルとか本当に存在すると信じているだけ
 本当に存在するプリンタは代理者で扱わなければならない
全世界プログラミング
---

"universal"

★ 慣れと直感 "nare"
★ 複雑さについて "fukuzatsu"

[[予測インタフェース]]
文字入力のいろいろ
 キーボードの入力
 ポインティングデバイスによる入力
インタフェースは誰が改革しているか
 学会なのか
関連話題
 表計算
  鈴木則久の選ぶ発明
   GUIも?
 十大発明
 ユビキタスとユニバーサル
 慣れと直感

貧乏な話
  Macのメニューバー
    場所を節約するために考え出されたものらしい

</body>
</html>


